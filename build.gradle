plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.healer1219'
version '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testCompileOnly(
            'org.mockito:mockito-core:3.6.28'
    )
}

test {
    useJUnitPlatform()
}

tasks.register('withSourcesJar') {
    from sourceSets.main.allJava
}
java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.addStringOption("charset", "UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

ext {
    isSnapShotVersion = project.version.endsWith("-SNAPSHOT")
}

subprojects {
    group 'io.github.healer1219'
    version '0.1-SNAPSHOT'

    apply {
        plugin 'java'

    }

    publishing {
        publications {
            "$project.name"(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java

                pom {
                    name = 'burger-cache'
                    description = 'A lightweight Java heap Cache'
                    url = 'https://github.com/healer1219/burger-cache'
                    licenses {
                        license {
                            name = 'GNU General Public License v3.0'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                        }
                    }
                    developers {
                        developer {
                            id = 'healer1219'
                            name = 'healer1219'
                            email = 'healer1219@163.com'
                        }
                    }
                }
            }
        }

        repositories {
            maven {
                credentials {
                    username System.getenv("OSSRH_USERNAME")
                    password System.getenv("OSSRH_PASSWORD")
                }
                if (isSnapShotVersion) {
                    url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                } else {
                    url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                }

            }
        }


    }
}



//signing {
//    sign(publishing.publications.burgerCache)
//}